(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{398:function(t,a,e){"use strict";e.r(a);var s=e(97),v=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"es6新增的变量-let-const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#es6新增的变量-let-const"}},[t._v("#")]),t._v(" ES6新增的变量 let const")]),t._v(" "),e("h2",{attrs:{id:"let"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#let"}},[t._v("#")]),t._v(" let")]),t._v(" "),e("p",[t._v("相对于var来说，只在其所在的代码块内生效\n别适合for循环的变量使用\n与var的区别：")]),t._v(" "),e("ol",[e("li",[t._v("不存在变量提升")]),t._v(" "),e("li",[t._v("会出现暂时性死区概念，在一个代码块中，let声明的变量在声明之前都不可使用")]),t._v(" "),e("li",[t._v("同一个作用域中，不允许重复声明，防止了覆盖问题。")])]),t._v(" "),e("p",[t._v("如果在某一个作用域内使用了let 、const，那该区域会形成一个封闭的区域，只要在声明前使用这些let const变量就报错。reference error")]),t._v(" "),e("h2",{attrs:{id:"const"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[t._v("#")]),t._v(" const")]),t._v(" "),e("p",[t._v("声明一个只读的变量，常量值不可更改。\n且在声明初期就必须直接赋值，作用域和let相同，")]),t._v(" "),e("ol",[e("li",[t._v("存在暂时性死区，只可在声明后使用。")]),t._v(" "),e("li",[t._v("同一个作用域，不可重复声明")]),t._v(" "),e("li",[t._v("不存在变量提升\nconst的本质是不许指向的变量内存地址改变")])]),t._v(" "),e("h2",{attrs:{id:"块作用域的概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#块作用域的概念"}},[t._v("#")]),t._v(" 块作用域的概念")]),t._v(" "),e("p",[t._v("外层块中的变量无法读取内层的，但内层可以定义和读取外层的同名变量。")]),t._v(" "),e("h2",{attrs:{id:"解构赋值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[t._v("#")]),t._v(" 解构赋值")]),t._v(" "),e("p",[t._v("let [a, b, c] = [1, 2, 4]")]),t._v(" "),e("p",[t._v("let [m, ...n] = [1, 454, 666, 845]\n如果不完全解构，会赋值undefined\n只要具备Iterator接口，就可进行解构赋值。")]),t._v(" "),e("p",[t._v("同样，解构赋值允许给默认值\nlet [foo = true] = []")]),t._v(" "),e("p",[t._v("object也可解构，不过是基于变量名赋值的。\nlet {obj, bar} ={obj: 'ppp', bar:'zzz'} //都有值\nlet {obj, bar} ={obj: 'ppp', MarB:'zzz'} // 第二个不行了")]),t._v(" "),e("p",[t._v("解构赋值的用途\n交换\n[x, y] = [y, x]")]),t._v(" "),e("p",[t._v("提取json数据\nlet jsonData =  {\nid: 42,\nstatus: 0,\ndata: {z:'s', dd: 'z'}\n}")]),t._v(" "),e("p",[t._v("let {id, status, data: mylist} = jsonData")]),t._v(" "),e("p",[t._v("对象的解构赋值是找到同名属性名，在赋值给对应的变量")]),t._v(" "),e("p",[t._v("解构是可以赋予默认值的。")])])}),[],!1,null,null,null);a.default=v.exports}}]);